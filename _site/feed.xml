<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2025-02-20T20:02:39+00:00</updated><id>http://localhost:4000/feed.xml</id><entry><title type="html">Spotify shuffle sucks!!! (and how you can fix it)</title><link href="http://localhost:4000/posts/Spotify-shuffle-sucks!!!-(And-how-you-can-fix-it).html" rel="alternate" type="text/html" title="Spotify shuffle sucks!!! (and how you can fix it)" /><published>2025-02-15T00:00:00+00:00</published><updated>2025-02-15T00:00:00+00:00</updated><id>http://localhost:4000/posts/Spotify%20shuffle%20sucks!!!%20(And%20how%20you%20can%20fix%20it)</id><content type="html" xml:base="http://localhost:4000/posts/Spotify-shuffle-sucks!!!-(And-how-you-can-fix-it).html"><![CDATA[<p>There’s a few things certain in life: death, taxes and Spotify’s shuffle algorithm eternally sucking ass. We all know the problem, you go to listen to your miles long playlist, hoping to find some long-lost music to rediscover, just to be given the same 10 or so songs as always? Every time I try to shuffle my playlist, I mourn the death of Google Play Music and accept my fate.</p>

<p>Well, I’ve finally snapped and I’ve decided to find a solution. Many sites tell you useless fixes, like to disable automix in Spotify’s settings (it was already disabled), or simply tell users to jump ship to another platform. However, if you dig a little deeper, and search through the GitHub, you can find a solution!</p>

<p>Full credit to <a href="https://github.com/kartikk221">kartikk221</a> and all the other contributors for this, I did nothing to contribute to this. Just head to <a href="https://spotify-true-shuffle.pages.dev/#">True Shuffle</a>, connect your Spotify account, and you’re done! If you have the app installed locally, or connected to an Alexa device, you can just select your desired playlist and device, hit shuffle, and be amazed by someone who can create a simple randomiser!</p>

<p>Anyways, I hope this helped, make sure to leave a comment if you have any other Spotify problems/fixes I should check out.</p>]]></content><author><name>ProbablyIdiot</name></author><summary type="html"><![CDATA[There’s a few things certain in life: death, taxes and Spotify’s shuffle algorithm eternally sucking ass. We all know the problem, you go to listen to your miles long playlist, hoping to find some long-lost music to rediscover, just to be given the same 10 or so songs as always? Every time I try to shuffle my playlist, I mourn the death of Google Play Music and accept my fate.]]></summary></entry><entry><title type="html">How to add giscus comments to a jekyll blog</title><link href="http://localhost:4000/posts/How-to-add-giscus-comments-to-a-Jekyll-blog.html" rel="alternate" type="text/html" title="How to add giscus comments to a jekyll blog" /><published>2025-01-28T00:00:00+00:00</published><updated>2025-01-28T00:00:00+00:00</updated><id>http://localhost:4000/posts/How%20to%20add%20giscus%20comments%20to%20a%20Jekyll%20blog</id><content type="html" xml:base="http://localhost:4000/posts/How-to-add-giscus-comments-to-a-Jekyll-blog.html"><![CDATA[<p>This is actually quite easy, but there are a few steps required before just adding the code to your web page.</p>

<h3 id="step-1---enable-gh-discussions">Step 1 - Enable GH discussions</h3>

<p>The way that giscus works is by creating GitHub discussion posts for each page and then displaying that discussion on the webpage. To enable GH discussions, head to your repo’s settings page, and scroll down to the features section. From there, simply enable discussions.</p>

<p><img src="/assets/postImages/GHdiscussSetup.png" alt="" /></p>

<p>You may want to clear out the extra categories here, but make sure you leave at least one announcements channel, as that’s what you’ll want to use for giscus.</p>

<h3 id="step-2---generate-giscus-code">Step 2 - Generate giscus code</h3>

<p>Head to the <a href="https://giscus.app/">giscus website</a> and follow the instructions there. Then select the discussion category as the announcements one you setup earlier and copy the code.</p>

<h3 id="step-3---insert-into-blog">Step 3 - Insert into blog</h3>

<p>Now, head to your website’s code, and scroll to the bottom of your posts template. Here, insert the code you generated earlier, and you’re good to go! Hope this helped, make sure to leave a comment if so.</p>]]></content><author><name>ProbablyIdiot</name></author><summary type="html"><![CDATA[This is actually quite easy, but there are a few steps required before just adding the code to your web page.]]></summary></entry><entry><title type="html">How to make a newsletter for a jekyll blog</title><link href="http://localhost:4000/posts/How-to-make-a-newsletter-for-a-Jekyll-blog.html" rel="alternate" type="text/html" title="How to make a newsletter for a jekyll blog" /><published>2024-12-12T00:00:00+00:00</published><updated>2024-12-12T00:00:00+00:00</updated><id>http://localhost:4000/posts/How%20to%20make%20a%20newsletter%20for%20a%20Jekyll%20blog</id><content type="html" xml:base="http://localhost:4000/posts/How-to-make-a-newsletter-for-a-Jekyll-blog.html"><![CDATA[<p>This is one of the most overly complex and undocumented jekyll problems I’ve come across so far (apart from pagination - but I try to block that out of my memory). I’ll try to make this short and easy to follow, but no promises.</p>

<h3 id="step-1---install-jekyll-feed">Step 1 - Install <code class="language-plaintext highlighter-rouge">jekyll-feed</code></h3>

<p>You might think “Why would I want an RSS feed? I want a newsletter!”. However, this is the simplest way of doing it. At the moment there are no plugins or tutorials for directly sending emails from your jekyll site (or none that I could find), therefore, the easiest way to make a newsletter is to copy your RSS feed.</p>

<p>Just follow the instructions on the <a href="https://github.com/jekyll/jekyll-feed">jekyll-feed Github</a> to install the plugin, and check that it works by going to <code class="language-plaintext highlighter-rouge">yoururl.com/feed.xml</code>. If it worked, you should see something like this, with the text containing all blog posts you have previously made.<img src="/assets/postImages/feedXml.png" alt="" /></p>

<h3 id="step-2---setup-a-mailing-website-to-mirror-your-rss-feed">Step 2 - Setup a mailing website to mirror your RSS feed</h3>

<p>This is the step that has taken forever to figure out. The most popular option for setups like this is <a href="https://mailchimp.com">Intuit Mailchimp</a>, however, they can get quite pricey and I prefer something open-source. At first I tried the <a href="[GitHub - ElliotKillick/rss2newsletter: Convert RSS/Atom feed to email newsletters](https://github.com/ElliotKillick/rss2newsletter)">RSS2Newsletter</a> project, however I could not manage to get it to install on my raspberry pi. I then spent ages looking through google for a free alternative. This is when I stumbled upon <a href="https://rssto.email">rssto.email</a>. A FOSS project hosted on Github that will convert any RSS feed into a newsletter and deliver it straight to your inbox. They have a simple user interface, and allow you to embed a link for your RSS feed straight into your blog. This can be annoying to setup, however, so look at step 3 for how to do that.</p>

<h3 id="step-3---setting-up-a-link-for-rsstoemail">Step 3 - Setting up a link for <code class="language-plaintext highlighter-rouge">rssto.email</code></h3>

<p>Head to their website, and click the EMBED ON YOUR BLOG button. Input the link to your RSS feed and then copy the link.</p>

<p><img src="/assets/postImages/rssToEmail.png" alt="" /></p>

<p>Then use this code (replacing <code class="language-plaintext highlighter-rouge">yourURL.com</code> with the link you copied) to create a newsletter button on your blog:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">"https://rssto.email"</span> <span class="na">method=</span><span class="s">"GET"</span> <span class="na">target=</span><span class="s">"_blank"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"hidden"</span> <span class="na">name=</span><span class="s">"url"</span> <span class="na">value=</span><span class="s">"yourURL.com"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"submit"</span><span class="nt">&gt;</span>Sign up to the newsletter!<span class="nt">&lt;/button&gt;</span>
<span class="nt">&lt;/form&gt;</span>
</code></pre></div></div>

<p>There you go! You should now have a fully functional newsletter for your users to keep up with all your blog posts. My next blog should be on adding comments, so keep an eye out for that.</p>]]></content><author><name>ProbablyIdiot</name></author><summary type="html"><![CDATA[This is one of the most overly complex and undocumented jekyll problems I’ve come across so far (apart from pagination - but I try to block that out of my memory). I’ll try to make this short and easy to follow, but no promises.]]></summary></entry><entry><title type="html">Welcome to the blog! (+ technical explanation)</title><link href="http://localhost:4000/posts/Welcome-to-the-blog!-(+-technical-explanation).html" rel="alternate" type="text/html" title="Welcome to the blog! (+ technical explanation)" /><published>2024-12-03T00:00:00+00:00</published><updated>2024-12-03T00:00:00+00:00</updated><id>http://localhost:4000/posts/Welcome%20to%20the%20blog!%20(+%20technical%20explanation)</id><content type="html" xml:base="http://localhost:4000/posts/Welcome-to-the-blog!-(+-technical-explanation).html"><![CDATA[<p>Hello, and welcome to the first post of my new website. This has been about a year in the making, and I’m really happy with how it’s turned out. In the future, I’ll be posting all my programming, 3d-printing and othe r miscellaneous techie projects here. More pages are also due to be added in the future, as well as rss and newsletter capabilities.</p>

<h3 id="how-does-the-website-work">How does the website work?</h3>

<p>Well - it’s complicated. I started this project, trying to build a custom, plain HTML + CSS website, with a few python scripts to manage the blogging system - it went about as well as you’d expect, but I learned some valuable web development skills that are used in this final versions of the website. So, finally, I settled on using Jekyll for the backend. For hosting, I used GitHub pages, but using actions, instead of the default configuration. This was to allow me to use the jekyll-paginate-v2 and jekyll-sitemap plugins. My domain registrar is NameCheap, as they had the cheapest rate for this url, and I used CloudFlare free tier for DNS, caching and CDN purposes. Finally, the the aestetics are made using the fantastic <a href="https://jdan.github.io/98.css/">98.css</a> and Alex Meub’s <a href="https://win98icons.alexmeub.com/">Windows 98 Icon collection</a>.</p>

<p>So, expect more posts like this in the future (although, they’ll probably be longer next time) and more features to come.</p>]]></content><author><name>ProbablyIdiot</name></author><summary type="html"><![CDATA[Hello, and welcome to the first post of my new website. This has been about a year in the making, and I’m really happy with how it’s turned out. In the future, I’ll be posting all my programming, 3d-printing and othe r miscellaneous techie projects here. More pages are also due to be added in the future, as well as rss and newsletter capabilities.]]></summary></entry></feed>